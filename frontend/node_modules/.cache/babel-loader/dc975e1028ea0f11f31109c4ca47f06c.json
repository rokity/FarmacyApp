{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/riccardoamadio/Desktop/farmacy/src/pages/MessaggiPaziente.js\";\nimport React from \"react\";\nconst testToken = \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/dfaf1e22-2d33-45c9-b4f8-31f634621d24/token\";\nconst instanceLocator = \"v1:us1:dfaf1e22-2d33-45c9-b4f8-31f634621d24\";\nconst roomId = 9806194;\nconst username = 'perborgen';\n\nclass MessaggiPaziente extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      messages: []\n    };\n    this.sendMessage = this.sendMessage.bind(this);\n  }\n\n  componentDidMount() {\n    const chatManager = new Chatkit.ChatManager({\n      instanceLocator: instanceLocator,\n      userId: 'janedoe',\n      tokenProvider: new Chatkit.TokenProvider({\n        url: testToken\n      })\n    });\n    chatManager.connect().then(currentUser => {\n      this.currentUser = currentUser;\n      this.currentUser.subscribeToRoom({\n        roomId: roomId,\n        hooks: {\n          onNewMessage: message => {\n            this.setState({\n              messages: [...this.state.messages, message]\n            });\n          }\n        }\n      });\n    });\n  }\n\n  sendMessage(text) {\n    this.currentUser.sendMessage({\n      text,\n      roomId: roomId\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n        roomId: this.state.roomId,\n        messages: this.state.messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SendMessageForm, {\n        sendMessage: this.sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }, this);\n  }\n\n}\n\nclass MessageList extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"message-list\",\n      children: this.props.messages.map((message, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"message\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: message.senderId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 27\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }, this);\n  }\n\n}\n\nclass SendMessageForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      message: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      message: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.sendMessage(this.state.message);\n    this.setState({\n      message: ''\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"send-message-form\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: this.handleChange,\n        value: this.state.message,\n        placeholder: \"Type your message and hit ENTER\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }, this);\n  }\n\n}\n\nfunction Title() {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"title\",\n    children: \"My awesome chat app\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 12\n  }, this);\n}\n\n_c = Title;\n\nvar _c;\n\n$RefreshReg$(_c, \"Title\");","map":{"version":3,"sources":["/Users/riccardoamadio/Desktop/farmacy/src/pages/MessaggiPaziente.js"],"names":["React","testToken","instanceLocator","roomId","username","MessaggiPaziente","Component","constructor","state","messages","sendMessage","bind","componentDidMount","chatManager","Chatkit","ChatManager","userId","tokenProvider","TokenProvider","url","connect","then","currentUser","subscribeToRoom","hooks","onNewMessage","message","setState","text","render","MessageList","props","map","index","senderId","id","SendMessageForm","handleChange","handleSubmit","e","target","value","preventDefault","Title"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEE,MAAMC,SAAS,GAAG,6GAAlB;AACA,MAAMC,eAAe,GAAG,6CAAxB;AACA,MAAMC,MAAM,GAAG,OAAf;AACA,MAAMC,QAAQ,GAAG,WAAjB;;AAEA,MAAMC,gBAAN,SAA+BL,KAAK,CAACM,SAArC,CAA+C;AAC3CC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,WAAW,GAAG,IAAIC,OAAO,CAACC,WAAZ,CAAwB;AACxCb,MAAAA,eAAe,EAAEA,eADuB;AAExCc,MAAAA,MAAM,EAAE,SAFgC;AAGxCC,MAAAA,aAAa,EAAE,IAAIH,OAAO,CAACI,aAAZ,CAA0B;AACrCC,QAAAA,GAAG,EAAElB;AADgC,OAA1B;AAHyB,KAAxB,CAApB;AAQAY,IAAAA,WAAW,CAACO,OAAZ,GACCC,IADD,CACMC,WAAW,IAAI;AACjB,WAAKA,WAAL,GAAmBA,WAAnB;AACA,WAAKA,WAAL,CAAiBC,eAAjB,CAAiC;AACjCpB,QAAAA,MAAM,EAAEA,MADyB;AAEjCqB,QAAAA,KAAK,EAAE;AACHC,UAAAA,YAAY,EAAEC,OAAO,IAAI;AAErB,iBAAKC,QAAL,CAAc;AACVlB,cAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,EAAyBiB,OAAzB;AADA,aAAd;AAGH;AANE;AAF0B,OAAjC;AAWL,KAdC;AAeH;;AAEDhB,EAAAA,WAAW,CAACkB,IAAD,EAAO;AACd,SAAKN,WAAL,CAAiBZ,WAAjB,CAA6B;AACzBkB,MAAAA,IADyB;AAEzBzB,MAAAA,MAAM,EAAEA;AAFiB,KAA7B;AAIH;;AAED0B,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AACI,QAAA,MAAM,EAAE,KAAKrB,KAAL,CAAWL,MADvB;AAEI,QAAA,QAAQ,EAAE,KAAKK,KAAL,CAAWC;AAFzB;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,eAAD;AACI,QAAA,WAAW,EAAE,KAAKC;AADtB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AArD0C;;AAwD/C,MAAMoB,WAAN,SAA0B9B,KAAK,CAACM,SAAhC,CAA0C;AACtCuB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA,gBACK,KAAKE,KAAL,CAAWtB,QAAX,CAAoBuB,GAApB,CAAwB,CAACN,OAAD,EAAUO,KAAV,KAAoB;AACzC,4BACE;AAAsB,UAAA,SAAS,EAAC,SAAhC;AAAA,kCACE;AAAA,sBAAMP,OAAO,CAACQ;AAAd;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAMR,OAAO,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAUF,OAAO,CAACS,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADF;AAMH,OAPA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAdqC;;AAiB1C,MAAMC,eAAN,SAA8BpC,KAAK,CAACM,SAApC,CAA8C;AAC1CC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTkB,MAAAA,OAAO,EAAE;AADA,KAAb;AAGA,SAAKW,YAAL,GAAoB,KAAKA,YAAL,CAAkB1B,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAK2B,YAAL,GAAoB,KAAKA,YAAL,CAAkB3B,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAED0B,EAAAA,YAAY,CAACE,CAAD,EAAI;AACZ,SAAKZ,QAAL,CAAc;AACVD,MAAAA,OAAO,EAAEa,CAAC,CAACC,MAAF,CAASC;AADR,KAAd;AAGH;;AAEDH,EAAAA,YAAY,CAACC,CAAD,EAAI;AACZA,IAAAA,CAAC,CAACG,cAAF;AACA,SAAKX,KAAL,CAAWrB,WAAX,CAAuB,KAAKF,KAAL,CAAWkB,OAAlC;AACA,SAAKC,QAAL,CAAc;AACVD,MAAAA,OAAO,EAAE;AADC,KAAd;AAGH;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACI;AACI,MAAA,QAAQ,EAAE,KAAKS,YADnB;AAEI,MAAA,SAAS,EAAC,mBAFd;AAAA,6BAGI;AACI,QAAA,QAAQ,EAAE,KAAKD,YADnB;AAEI,QAAA,KAAK,EAAE,KAAK7B,KAAL,CAAWkB,OAFtB;AAGI,QAAA,WAAW,EAAC,iCAHhB;AAII,QAAA,IAAI,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AApCyC;;AAuC9C,SAASiB,KAAT,GAAiB;AACf,sBAAO;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAFQA,K","sourcesContent":["import React from \"react\";\n\n  const testToken = \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/dfaf1e22-2d33-45c9-b4f8-31f634621d24/token\"\n  const instanceLocator = \"v1:us1:dfaf1e22-2d33-45c9-b4f8-31f634621d24\"\n  const roomId = 9806194\n  const username = 'perborgen'\n  \n  class MessaggiPaziente extends React.Component {\n      constructor() {\n          super()\n          this.state = {\n              messages: []\n          }\n          this.sendMessage = this.sendMessage.bind(this)\n      } \n      \n      componentDidMount() {\n          const chatManager = new Chatkit.ChatManager({\n              instanceLocator: instanceLocator,\n              userId: 'janedoe',\n              tokenProvider: new Chatkit.TokenProvider({\n                  url: testToken\n              })\n          })\n          \n          chatManager.connect()\n          .then(currentUser => {\n              this.currentUser = currentUser\n              this.currentUser.subscribeToRoom({\n              roomId: roomId,\n              hooks: {\n                  onNewMessage: message => {\n  \n                      this.setState({\n                          messages: [...this.state.messages, message]\n                      })\n                  }\n              }\n          })\n        })\n      }\n      \n      sendMessage(text) {\n          this.currentUser.sendMessage({\n              text,\n              roomId: roomId\n          })\n      }\n      \n      render() {\n          return (\n              <div className=\"app\">\n                <Title />\n                <MessageList \n                    roomId={this.state.roomId}\n                    messages={this.state.messages} />\n                <SendMessageForm\n                    sendMessage={this.sendMessage} />\n              </div>\n          );\n      }\n  }\n  \n  class MessageList extends React.Component {\n      render() {\n          return (\n              <ul className=\"message-list\">\n                  {this.props.messages.map((message, index) => {\n                      return (\n                        <li  key={message.id} className=\"message\">\n                          <div>{message.senderId}</div>\n                          <div>{message.text}</div>\n                        </li>\n                      )\n                  })}\n              </ul>\n          )\n      }\n  }\n  \n  class SendMessageForm extends React.Component {\n      constructor() {\n          super()\n          this.state = {\n              message: ''\n          }\n          this.handleChange = this.handleChange.bind(this)\n          this.handleSubmit = this.handleSubmit.bind(this)\n      }\n      \n      handleChange(e) {\n          this.setState({\n              message: e.target.value\n          })\n      }\n      \n      handleSubmit(e) {\n          e.preventDefault()\n          this.props.sendMessage(this.state.message)\n          this.setState({\n              message: ''\n          })\n      }\n      \n      render() {\n          return (\n              <form\n                  onSubmit={this.handleSubmit}\n                  className=\"send-message-form\">\n                  <input\n                      onChange={this.handleChange}\n                      value={this.state.message}\n                      placeholder=\"Type your message and hit ENTER\"\n                      type=\"text\" />\n              </form>\n          )\n      }\n  }\n  \n  function Title() {\n    return <p className=\"title\">My awesome chat app</p>\n  }"]},"metadata":{},"sourceType":"module"}